# Generated from Grammar.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,60,398,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,
        1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,
        1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,
        1,30,1,30,1,31,1,31,1,31,5,31,248,8,31,10,31,12,31,251,9,31,3,31,
        253,8,31,1,32,4,32,256,8,32,11,32,12,32,257,1,32,1,32,5,32,262,8,
        32,10,32,12,32,265,9,32,1,32,1,32,4,32,269,8,32,11,32,12,32,270,
        3,32,273,8,32,1,33,1,33,5,33,277,8,33,10,33,12,33,280,9,33,1,34,
        1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,294,
        8,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,
        1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,
        1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,50,1,50,
        1,50,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,3,56,366,8,56,1,57,4,57,369,8,57,11,
        57,12,57,370,1,57,1,57,1,58,1,58,1,58,1,58,5,58,379,8,58,10,58,12,
        58,382,9,58,1,58,3,58,385,8,58,1,59,1,59,1,59,1,59,5,59,391,8,59,
        10,59,12,59,394,9,59,1,59,1,59,1,59,2,380,392,0,60,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
        38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
        49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,
        117,59,119,60,1,0,7,1,0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,
        0,48,57,65,90,95,95,97,122,1,0,0,255,3,0,9,10,13,13,32,32,1,1,10,
        10,414,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
        0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
        0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
        1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,
        0,119,1,0,0,0,1,121,1,0,0,0,3,125,1,0,0,0,5,130,1,0,0,0,7,132,1,
        0,0,0,9,134,1,0,0,0,11,136,1,0,0,0,13,138,1,0,0,0,15,140,1,0,0,0,
        17,142,1,0,0,0,19,147,1,0,0,0,21,155,1,0,0,0,23,162,1,0,0,0,25,165,
        1,0,0,0,27,168,1,0,0,0,29,174,1,0,0,0,31,179,1,0,0,0,33,185,1,0,
        0,0,35,188,1,0,0,0,37,191,1,0,0,0,39,194,1,0,0,0,41,197,1,0,0,0,
        43,200,1,0,0,0,45,204,1,0,0,0,47,208,1,0,0,0,49,211,1,0,0,0,51,214,
        1,0,0,0,53,217,1,0,0,0,55,223,1,0,0,0,57,232,1,0,0,0,59,238,1,0,
        0,0,61,242,1,0,0,0,63,252,1,0,0,0,65,272,1,0,0,0,67,274,1,0,0,0,
        69,281,1,0,0,0,71,285,1,0,0,0,73,297,1,0,0,0,75,299,1,0,0,0,77,301,
        1,0,0,0,79,303,1,0,0,0,81,305,1,0,0,0,83,307,1,0,0,0,85,309,1,0,
        0,0,87,311,1,0,0,0,89,314,1,0,0,0,91,317,1,0,0,0,93,320,1,0,0,0,
        95,323,1,0,0,0,97,326,1,0,0,0,99,329,1,0,0,0,101,331,1,0,0,0,103,
        334,1,0,0,0,105,337,1,0,0,0,107,339,1,0,0,0,109,341,1,0,0,0,111,
        343,1,0,0,0,113,365,1,0,0,0,115,368,1,0,0,0,117,374,1,0,0,0,119,
        386,1,0,0,0,121,122,5,105,0,0,122,123,5,110,0,0,123,124,5,116,0,
        0,124,2,1,0,0,0,125,126,5,109,0,0,126,127,5,97,0,0,127,128,5,105,
        0,0,128,129,5,110,0,0,129,4,1,0,0,0,130,131,5,40,0,0,131,6,1,0,0,
        0,132,133,5,41,0,0,133,8,1,0,0,0,134,135,5,123,0,0,135,10,1,0,0,
        0,136,137,5,125,0,0,137,12,1,0,0,0,138,139,5,44,0,0,139,14,1,0,0,
        0,140,141,5,61,0,0,141,16,1,0,0,0,142,143,5,101,0,0,143,144,5,110,
        0,0,144,145,5,117,0,0,145,146,5,109,0,0,146,18,1,0,0,0,147,148,5,
        116,0,0,148,149,5,121,0,0,149,150,5,112,0,0,150,151,5,101,0,0,151,
        152,5,100,0,0,152,153,5,101,0,0,153,154,5,102,0,0,154,20,1,0,0,0,
        155,156,5,112,0,0,156,157,5,114,0,0,157,158,5,105,0,0,158,159,5,
        110,0,0,159,160,5,116,0,0,160,161,5,102,0,0,161,22,1,0,0,0,162,163,
        5,43,0,0,163,164,5,43,0,0,164,24,1,0,0,0,165,166,5,45,0,0,166,167,
        5,45,0,0,167,26,1,0,0,0,168,169,5,102,0,0,169,170,5,108,0,0,170,
        171,5,111,0,0,171,172,5,97,0,0,172,173,5,116,0,0,173,28,1,0,0,0,
        174,175,5,99,0,0,175,176,5,104,0,0,176,177,5,97,0,0,177,178,5,114,
        0,0,178,30,1,0,0,0,179,180,5,99,0,0,180,181,5,111,0,0,181,182,5,
        110,0,0,182,183,5,115,0,0,183,184,5,116,0,0,184,32,1,0,0,0,185,186,
        5,43,0,0,186,187,5,61,0,0,187,34,1,0,0,0,188,189,5,45,0,0,189,190,
        5,61,0,0,190,36,1,0,0,0,191,192,5,42,0,0,192,193,5,61,0,0,193,38,
        1,0,0,0,194,195,5,47,0,0,195,196,5,61,0,0,196,40,1,0,0,0,197,198,
        5,37,0,0,198,199,5,61,0,0,199,42,1,0,0,0,200,201,5,60,0,0,201,202,
        5,60,0,0,202,203,5,61,0,0,203,44,1,0,0,0,204,205,5,62,0,0,205,206,
        5,62,0,0,206,207,5,61,0,0,207,46,1,0,0,0,208,209,5,38,0,0,209,210,
        5,61,0,0,210,48,1,0,0,0,211,212,5,94,0,0,212,213,5,61,0,0,213,50,
        1,0,0,0,214,215,5,124,0,0,215,216,5,61,0,0,216,52,1,0,0,0,217,218,
        5,98,0,0,218,219,5,114,0,0,219,220,5,101,0,0,220,221,5,97,0,0,221,
        222,5,107,0,0,222,54,1,0,0,0,223,224,5,99,0,0,224,225,5,111,0,0,
        225,226,5,110,0,0,226,227,5,116,0,0,227,228,5,105,0,0,228,229,5,
        110,0,0,229,230,5,117,0,0,230,231,5,101,0,0,231,56,1,0,0,0,232,233,
        5,119,0,0,233,234,5,104,0,0,234,235,5,105,0,0,235,236,5,108,0,0,
        236,237,5,101,0,0,237,58,1,0,0,0,238,239,5,102,0,0,239,240,5,111,
        0,0,240,241,5,114,0,0,241,60,1,0,0,0,242,243,5,59,0,0,243,62,1,0,
        0,0,244,253,5,48,0,0,245,249,7,0,0,0,246,248,7,1,0,0,247,246,1,0,
        0,0,248,251,1,0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,253,1,0,
        0,0,251,249,1,0,0,0,252,244,1,0,0,0,252,245,1,0,0,0,253,64,1,0,0,
        0,254,256,7,1,0,0,255,254,1,0,0,0,256,257,1,0,0,0,257,255,1,0,0,
        0,257,258,1,0,0,0,258,259,1,0,0,0,259,263,5,46,0,0,260,262,7,1,0,
        0,261,260,1,0,0,0,262,265,1,0,0,0,263,261,1,0,0,0,263,264,1,0,0,
        0,264,273,1,0,0,0,265,263,1,0,0,0,266,268,5,46,0,0,267,269,7,1,0,
        0,268,267,1,0,0,0,269,270,1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,
        0,271,273,1,0,0,0,272,255,1,0,0,0,272,266,1,0,0,0,273,66,1,0,0,0,
        274,278,7,2,0,0,275,277,7,3,0,0,276,275,1,0,0,0,277,280,1,0,0,0,
        278,276,1,0,0,0,278,279,1,0,0,0,279,68,1,0,0,0,280,278,1,0,0,0,281,
        282,5,39,0,0,282,283,7,4,0,0,283,284,5,39,0,0,284,70,1,0,0,0,285,
        293,5,39,0,0,286,287,5,92,0,0,287,294,5,110,0,0,288,289,5,92,0,0,
        289,294,5,116,0,0,290,291,5,92,0,0,291,294,5,48,0,0,292,294,9,0,
        0,0,293,286,1,0,0,0,293,288,1,0,0,0,293,290,1,0,0,0,293,292,1,0,
        0,0,294,295,1,0,0,0,295,296,5,39,0,0,296,72,1,0,0,0,297,298,5,43,
        0,0,298,74,1,0,0,0,299,300,5,45,0,0,300,76,1,0,0,0,301,302,5,42,
        0,0,302,78,1,0,0,0,303,304,5,47,0,0,304,80,1,0,0,0,305,306,5,37,
        0,0,306,82,1,0,0,0,307,308,5,62,0,0,308,84,1,0,0,0,309,310,5,60,
        0,0,310,86,1,0,0,0,311,312,5,61,0,0,312,313,5,61,0,0,313,88,1,0,
        0,0,314,315,5,62,0,0,315,316,5,61,0,0,316,90,1,0,0,0,317,318,5,60,
        0,0,318,319,5,61,0,0,319,92,1,0,0,0,320,321,5,33,0,0,321,322,5,61,
        0,0,322,94,1,0,0,0,323,324,5,38,0,0,324,325,5,38,0,0,325,96,1,0,
        0,0,326,327,5,124,0,0,327,328,5,124,0,0,328,98,1,0,0,0,329,330,5,
        33,0,0,330,100,1,0,0,0,331,332,5,60,0,0,332,333,5,60,0,0,333,102,
        1,0,0,0,334,335,5,62,0,0,335,336,5,62,0,0,336,104,1,0,0,0,337,338,
        5,38,0,0,338,106,1,0,0,0,339,340,5,124,0,0,340,108,1,0,0,0,341,342,
        5,94,0,0,342,110,1,0,0,0,343,344,5,126,0,0,344,112,1,0,0,0,345,346,
        5,34,0,0,346,347,5,37,0,0,347,348,5,115,0,0,348,366,5,34,0,0,349,
        350,5,34,0,0,350,351,5,37,0,0,351,352,5,100,0,0,352,366,5,34,0,0,
        353,354,5,34,0,0,354,355,5,37,0,0,355,356,5,120,0,0,356,366,5,34,
        0,0,357,358,5,34,0,0,358,359,5,37,0,0,359,360,5,102,0,0,360,366,
        5,34,0,0,361,362,5,34,0,0,362,363,5,37,0,0,363,364,5,99,0,0,364,
        366,5,34,0,0,365,345,1,0,0,0,365,349,1,0,0,0,365,353,1,0,0,0,365,
        357,1,0,0,0,365,361,1,0,0,0,366,114,1,0,0,0,367,369,7,5,0,0,368,
        367,1,0,0,0,369,370,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,
        372,1,0,0,0,372,373,6,57,0,0,373,116,1,0,0,0,374,375,5,47,0,0,375,
        376,5,47,0,0,376,380,1,0,0,0,377,379,9,0,0,0,378,377,1,0,0,0,379,
        382,1,0,0,0,380,381,1,0,0,0,380,378,1,0,0,0,381,384,1,0,0,0,382,
        380,1,0,0,0,383,385,7,6,0,0,384,383,1,0,0,0,385,118,1,0,0,0,386,
        387,5,47,0,0,387,388,5,42,0,0,388,392,1,0,0,0,389,391,9,0,0,0,390,
        389,1,0,0,0,391,394,1,0,0,0,392,393,1,0,0,0,392,390,1,0,0,0,393,
        395,1,0,0,0,394,392,1,0,0,0,395,396,5,42,0,0,396,397,5,47,0,0,397,
        120,1,0,0,0,14,0,249,252,257,263,270,272,278,293,365,370,380,384,
        392,1,6,0,0
    ]

class GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    BREAK = 27
    CONTINUE = 28
    WHILE = 29
    FOR = 30
    TERMINAL = 31
    NUMBER = 32
    FLOAT = 33
    ID = 34
    CHAR = 35
    CHAR_ESC = 36
    PLUS = 37
    MINUS = 38
    MUL = 39
    DIV = 40
    MOD = 41
    GT = 42
    LT = 43
    EQ = 44
    GE = 45
    LE = 46
    NE = 47
    AND = 48
    OR = 49
    NOT = 50
    LSHIFT = 51
    RSHIFT = 52
    BITAND = 53
    BITOR = 54
    BITXOR = 55
    BITNOT = 56
    PRINTFREPLACER = 57
    WS = 58
    SINGLE_LINE_COMMENT = 59
    MULTI_LINE_COMMENT = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int'", "'main'", "'('", "')'", "'{'", "'}'", "','", "'='", 
            "'enum'", "'typedef'", "'printf'", "'++'", "'--'", "'float'", 
            "'char'", "'const'", "'+='", "'-='", "'*='", "'/='", "'%='", 
            "'<<='", "'>>='", "'&='", "'^='", "'|='", "'break'", "'continue'", 
            "'while'", "'for'", "';'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'>'", "'<'", "'=='", "'>='", "'<='", "'!='", "'&&'", "'||'", 
            "'!'", "'<<'", "'>>'", "'&'", "'|'", "'^'", "'~'" ]

    symbolicNames = [ "<INVALID>",
            "BREAK", "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", "FLOAT", 
            "ID", "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
            "GT", "LT", "EQ", "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", 
            "RSHIFT", "BITAND", "BITOR", "BITXOR", "BITNOT", "PRINTFREPLACER", 
            "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "BREAK", "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", 
                  "FLOAT", "ID", "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", 
                  "DIV", "MOD", "GT", "LT", "EQ", "GE", "LE", "NE", "AND", 
                  "OR", "NOT", "LSHIFT", "RSHIFT", "BITAND", "BITOR", "BITXOR", 
                  "BITNOT", "PRINTFREPLACER", "WS", "SINGLE_LINE_COMMENT", 
                  "MULTI_LINE_COMMENT" ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


