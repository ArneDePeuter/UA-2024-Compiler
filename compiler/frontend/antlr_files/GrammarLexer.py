# Generated from Grammar.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,71,470,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,
        10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
        13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,
        17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,
        19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,
        23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,
        27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,
        31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,
        33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,
        35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,
        37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
        39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,42,1,42,1,42,5,
        42,320,8,42,10,42,12,42,323,9,42,3,42,325,8,42,1,43,4,43,328,8,43,
        11,43,12,43,329,1,43,1,43,5,43,334,8,43,10,43,12,43,337,9,43,1,43,
        1,43,4,43,341,8,43,11,43,12,43,342,3,43,345,8,43,1,44,1,44,5,44,
        349,8,44,10,44,12,44,352,9,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,
        1,46,1,46,1,46,1,46,1,46,3,46,366,8,46,1,46,1,46,1,47,1,47,1,48,
        1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,
        1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,
        1,59,1,59,1,59,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,63,1,63,
        1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,
        1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,
        3,67,438,8,67,1,68,4,68,441,8,68,11,68,12,68,442,1,68,1,68,1,69,
        1,69,1,69,1,69,5,69,451,8,69,10,69,12,69,454,9,69,1,69,3,69,457,
        8,69,1,70,1,70,1,70,1,70,5,70,463,8,70,10,70,12,70,466,9,70,1,70,
        1,70,1,70,2,452,464,0,71,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,
        85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
        53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,
        125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,1,
        0,7,1,0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
        95,97,122,1,0,0,255,3,0,9,10,13,13,32,32,1,1,10,10,486,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
        33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
        43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,
        53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
        63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
        73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,
        83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,
        93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,
        0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,
        0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,
        121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,
        0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,
        1,0,0,0,0,141,1,0,0,0,1,143,1,0,0,0,3,150,1,0,0,0,5,152,1,0,0,0,
        7,154,1,0,0,0,9,159,1,0,0,0,11,161,1,0,0,0,13,163,1,0,0,0,15,165,
        1,0,0,0,17,167,1,0,0,0,19,174,1,0,0,0,21,176,1,0,0,0,23,178,1,0,
        0,0,25,180,1,0,0,0,27,188,1,0,0,0,29,191,1,0,0,0,31,194,1,0,0,0,
        33,196,1,0,0,0,35,200,1,0,0,0,37,206,1,0,0,0,39,211,1,0,0,0,41,216,
        1,0,0,0,43,222,1,0,0,0,45,225,1,0,0,0,47,228,1,0,0,0,49,231,1,0,
        0,0,51,234,1,0,0,0,53,237,1,0,0,0,55,241,1,0,0,0,57,245,1,0,0,0,
        59,248,1,0,0,0,61,251,1,0,0,0,63,254,1,0,0,0,65,261,1,0,0,0,67,266,
        1,0,0,0,69,274,1,0,0,0,71,277,1,0,0,0,73,282,1,0,0,0,75,288,1,0,
        0,0,77,295,1,0,0,0,79,304,1,0,0,0,81,310,1,0,0,0,83,314,1,0,0,0,
        85,324,1,0,0,0,87,344,1,0,0,0,89,346,1,0,0,0,91,353,1,0,0,0,93,357,
        1,0,0,0,95,369,1,0,0,0,97,371,1,0,0,0,99,373,1,0,0,0,101,375,1,0,
        0,0,103,377,1,0,0,0,105,379,1,0,0,0,107,381,1,0,0,0,109,383,1,0,
        0,0,111,386,1,0,0,0,113,389,1,0,0,0,115,392,1,0,0,0,117,395,1,0,
        0,0,119,398,1,0,0,0,121,401,1,0,0,0,123,403,1,0,0,0,125,406,1,0,
        0,0,127,409,1,0,0,0,129,411,1,0,0,0,131,413,1,0,0,0,133,415,1,0,
        0,0,135,437,1,0,0,0,137,440,1,0,0,0,139,446,1,0,0,0,141,458,1,0,
        0,0,143,144,5,115,0,0,144,145,5,116,0,0,145,146,5,114,0,0,146,147,
        5,117,0,0,147,148,5,99,0,0,148,149,5,116,0,0,149,2,1,0,0,0,150,151,
        5,123,0,0,151,4,1,0,0,0,152,153,5,125,0,0,153,6,1,0,0,0,154,155,
        5,101,0,0,155,156,5,110,0,0,156,157,5,117,0,0,157,158,5,109,0,0,
        158,8,1,0,0,0,159,160,5,44,0,0,160,10,1,0,0,0,161,162,5,61,0,0,162,
        12,1,0,0,0,163,164,5,40,0,0,164,14,1,0,0,0,165,166,5,41,0,0,166,
        16,1,0,0,0,167,168,5,112,0,0,168,169,5,114,0,0,169,170,5,105,0,0,
        170,171,5,110,0,0,171,172,5,116,0,0,172,173,5,102,0,0,173,18,1,0,
        0,0,174,175,5,91,0,0,175,20,1,0,0,0,176,177,5,93,0,0,177,22,1,0,
        0,0,178,179,5,58,0,0,179,24,1,0,0,0,180,181,5,116,0,0,181,182,5,
        121,0,0,182,183,5,112,0,0,183,184,5,101,0,0,184,185,5,100,0,0,185,
        186,5,101,0,0,186,187,5,102,0,0,187,26,1,0,0,0,188,189,5,43,0,0,
        189,190,5,43,0,0,190,28,1,0,0,0,191,192,5,45,0,0,192,193,5,45,0,
        0,193,30,1,0,0,0,194,195,5,46,0,0,195,32,1,0,0,0,196,197,5,105,0,
        0,197,198,5,110,0,0,198,199,5,116,0,0,199,34,1,0,0,0,200,201,5,102,
        0,0,201,202,5,108,0,0,202,203,5,111,0,0,203,204,5,97,0,0,204,205,
        5,116,0,0,205,36,1,0,0,0,206,207,5,99,0,0,207,208,5,104,0,0,208,
        209,5,97,0,0,209,210,5,114,0,0,210,38,1,0,0,0,211,212,5,118,0,0,
        212,213,5,111,0,0,213,214,5,105,0,0,214,215,5,100,0,0,215,40,1,0,
        0,0,216,217,5,99,0,0,217,218,5,111,0,0,218,219,5,110,0,0,219,220,
        5,115,0,0,220,221,5,116,0,0,221,42,1,0,0,0,222,223,5,43,0,0,223,
        224,5,61,0,0,224,44,1,0,0,0,225,226,5,45,0,0,226,227,5,61,0,0,227,
        46,1,0,0,0,228,229,5,42,0,0,229,230,5,61,0,0,230,48,1,0,0,0,231,
        232,5,47,0,0,232,233,5,61,0,0,233,50,1,0,0,0,234,235,5,37,0,0,235,
        236,5,61,0,0,236,52,1,0,0,0,237,238,5,60,0,0,238,239,5,60,0,0,239,
        240,5,61,0,0,240,54,1,0,0,0,241,242,5,62,0,0,242,243,5,62,0,0,243,
        244,5,61,0,0,244,56,1,0,0,0,245,246,5,38,0,0,246,247,5,61,0,0,247,
        58,1,0,0,0,248,249,5,94,0,0,249,250,5,61,0,0,250,60,1,0,0,0,251,
        252,5,124,0,0,252,253,5,61,0,0,253,62,1,0,0,0,254,255,5,115,0,0,
        255,256,5,119,0,0,256,257,5,105,0,0,257,258,5,116,0,0,258,259,5,
        99,0,0,259,260,5,104,0,0,260,64,1,0,0,0,261,262,5,99,0,0,262,263,
        5,97,0,0,263,264,5,115,0,0,264,265,5,101,0,0,265,66,1,0,0,0,266,
        267,5,100,0,0,267,268,5,101,0,0,268,269,5,102,0,0,269,270,5,97,0,
        0,270,271,5,117,0,0,271,272,5,108,0,0,272,273,5,116,0,0,273,68,1,
        0,0,0,274,275,5,105,0,0,275,276,5,102,0,0,276,70,1,0,0,0,277,278,
        5,101,0,0,278,279,5,108,0,0,279,280,5,115,0,0,280,281,5,101,0,0,
        281,72,1,0,0,0,282,283,5,98,0,0,283,284,5,114,0,0,284,285,5,101,
        0,0,285,286,5,97,0,0,286,287,5,107,0,0,287,74,1,0,0,0,288,289,5,
        114,0,0,289,290,5,101,0,0,290,291,5,116,0,0,291,292,5,117,0,0,292,
        293,5,114,0,0,293,294,5,110,0,0,294,76,1,0,0,0,295,296,5,99,0,0,
        296,297,5,111,0,0,297,298,5,110,0,0,298,299,5,116,0,0,299,300,5,
        105,0,0,300,301,5,110,0,0,301,302,5,117,0,0,302,303,5,101,0,0,303,
        78,1,0,0,0,304,305,5,119,0,0,305,306,5,104,0,0,306,307,5,105,0,0,
        307,308,5,108,0,0,308,309,5,101,0,0,309,80,1,0,0,0,310,311,5,102,
        0,0,311,312,5,111,0,0,312,313,5,114,0,0,313,82,1,0,0,0,314,315,5,
        59,0,0,315,84,1,0,0,0,316,325,5,48,0,0,317,321,7,0,0,0,318,320,7,
        1,0,0,319,318,1,0,0,0,320,323,1,0,0,0,321,319,1,0,0,0,321,322,1,
        0,0,0,322,325,1,0,0,0,323,321,1,0,0,0,324,316,1,0,0,0,324,317,1,
        0,0,0,325,86,1,0,0,0,326,328,7,1,0,0,327,326,1,0,0,0,328,329,1,0,
        0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,331,1,0,0,0,331,335,5,46,
        0,0,332,334,7,1,0,0,333,332,1,0,0,0,334,337,1,0,0,0,335,333,1,0,
        0,0,335,336,1,0,0,0,336,345,1,0,0,0,337,335,1,0,0,0,338,340,5,46,
        0,0,339,341,7,1,0,0,340,339,1,0,0,0,341,342,1,0,0,0,342,340,1,0,
        0,0,342,343,1,0,0,0,343,345,1,0,0,0,344,327,1,0,0,0,344,338,1,0,
        0,0,345,88,1,0,0,0,346,350,7,2,0,0,347,349,7,3,0,0,348,347,1,0,0,
        0,349,352,1,0,0,0,350,348,1,0,0,0,350,351,1,0,0,0,351,90,1,0,0,0,
        352,350,1,0,0,0,353,354,5,39,0,0,354,355,7,4,0,0,355,356,5,39,0,
        0,356,92,1,0,0,0,357,365,5,39,0,0,358,359,5,92,0,0,359,366,5,110,
        0,0,360,361,5,92,0,0,361,366,5,116,0,0,362,363,5,92,0,0,363,366,
        5,48,0,0,364,366,9,0,0,0,365,358,1,0,0,0,365,360,1,0,0,0,365,362,
        1,0,0,0,365,364,1,0,0,0,366,367,1,0,0,0,367,368,5,39,0,0,368,94,
        1,0,0,0,369,370,5,43,0,0,370,96,1,0,0,0,371,372,5,45,0,0,372,98,
        1,0,0,0,373,374,5,42,0,0,374,100,1,0,0,0,375,376,5,47,0,0,376,102,
        1,0,0,0,377,378,5,37,0,0,378,104,1,0,0,0,379,380,5,62,0,0,380,106,
        1,0,0,0,381,382,5,60,0,0,382,108,1,0,0,0,383,384,5,61,0,0,384,385,
        5,61,0,0,385,110,1,0,0,0,386,387,5,62,0,0,387,388,5,61,0,0,388,112,
        1,0,0,0,389,390,5,60,0,0,390,391,5,61,0,0,391,114,1,0,0,0,392,393,
        5,33,0,0,393,394,5,61,0,0,394,116,1,0,0,0,395,396,5,38,0,0,396,397,
        5,38,0,0,397,118,1,0,0,0,398,399,5,124,0,0,399,400,5,124,0,0,400,
        120,1,0,0,0,401,402,5,33,0,0,402,122,1,0,0,0,403,404,5,60,0,0,404,
        405,5,60,0,0,405,124,1,0,0,0,406,407,5,62,0,0,407,408,5,62,0,0,408,
        126,1,0,0,0,409,410,5,38,0,0,410,128,1,0,0,0,411,412,5,124,0,0,412,
        130,1,0,0,0,413,414,5,94,0,0,414,132,1,0,0,0,415,416,5,126,0,0,416,
        134,1,0,0,0,417,418,5,34,0,0,418,419,5,37,0,0,419,420,5,115,0,0,
        420,438,5,34,0,0,421,422,5,34,0,0,422,423,5,37,0,0,423,424,5,100,
        0,0,424,438,5,34,0,0,425,426,5,34,0,0,426,427,5,37,0,0,427,428,5,
        120,0,0,428,438,5,34,0,0,429,430,5,34,0,0,430,431,5,37,0,0,431,432,
        5,102,0,0,432,438,5,34,0,0,433,434,5,34,0,0,434,435,5,37,0,0,435,
        436,5,99,0,0,436,438,5,34,0,0,437,417,1,0,0,0,437,421,1,0,0,0,437,
        425,1,0,0,0,437,429,1,0,0,0,437,433,1,0,0,0,438,136,1,0,0,0,439,
        441,7,5,0,0,440,439,1,0,0,0,441,442,1,0,0,0,442,440,1,0,0,0,442,
        443,1,0,0,0,443,444,1,0,0,0,444,445,6,68,0,0,445,138,1,0,0,0,446,
        447,5,47,0,0,447,448,5,47,0,0,448,452,1,0,0,0,449,451,9,0,0,0,450,
        449,1,0,0,0,451,454,1,0,0,0,452,453,1,0,0,0,452,450,1,0,0,0,453,
        456,1,0,0,0,454,452,1,0,0,0,455,457,7,6,0,0,456,455,1,0,0,0,457,
        140,1,0,0,0,458,459,5,47,0,0,459,460,5,42,0,0,460,464,1,0,0,0,461,
        463,9,0,0,0,462,461,1,0,0,0,463,466,1,0,0,0,464,465,1,0,0,0,464,
        462,1,0,0,0,465,467,1,0,0,0,466,464,1,0,0,0,467,468,5,42,0,0,468,
        469,5,47,0,0,469,142,1,0,0,0,14,0,321,324,329,335,342,344,350,365,
        437,442,452,456,464,1,6,0,0
    ]

class GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    SWITCH = 32
    CASE = 33
    DEFAULT = 34
    IF = 35
    ELSE = 36
    BREAK = 37
    RETURN = 38
    CONTINUE = 39
    WHILE = 40
    FOR = 41
    TERMINAL = 42
    NUMBER = 43
    FLOAT = 44
    ID = 45
    CHAR = 46
    CHAR_ESC = 47
    PLUS = 48
    MINUS = 49
    MUL = 50
    DIV = 51
    MOD = 52
    GT = 53
    LT = 54
    EQ = 55
    GE = 56
    LE = 57
    NE = 58
    AND = 59
    OR = 60
    NOT = 61
    LSHIFT = 62
    RSHIFT = 63
    BITAND = 64
    BITOR = 65
    BITXOR = 66
    BITNOT = 67
    PRINTFREPLACER = 68
    WS = 69
    SINGLE_LINE_COMMENT = 70
    MULTI_LINE_COMMENT = 71

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'struct'", "'{'", "'}'", "'enum'", "','", "'='", "'('", "')'", 
            "'printf'", "'['", "']'", "':'", "'typedef'", "'++'", "'--'", 
            "'.'", "'int'", "'float'", "'char'", "'void'", "'const'", "'+='", 
            "'-='", "'*='", "'/='", "'%='", "'<<='", "'>>='", "'&='", "'^='", 
            "'|='", "'switch'", "'case'", "'default'", "'if'", "'else'", 
            "'break'", "'return'", "'continue'", "'while'", "'for'", "';'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'>'", "'<'", "'=='", "'>='", 
            "'<='", "'!='", "'&&'", "'||'", "'!'", "'<<'", "'>>'", "'&'", 
            "'|'", "'^'", "'~'" ]

    symbolicNames = [ "<INVALID>",
            "SWITCH", "CASE", "DEFAULT", "IF", "ELSE", "BREAK", "RETURN", 
            "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", "FLOAT", "ID", 
            "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", 
            "LT", "EQ", "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", 
            "RSHIFT", "BITAND", "BITOR", "BITXOR", "BITNOT", "PRINTFREPLACER", 
            "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "SWITCH", 
                  "CASE", "DEFAULT", "IF", "ELSE", "BREAK", "RETURN", "CONTINUE", 
                  "WHILE", "FOR", "TERMINAL", "NUMBER", "FLOAT", "ID", "CHAR", 
                  "CHAR_ESC", "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", 
                  "LT", "EQ", "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", 
                  "RSHIFT", "BITAND", "BITOR", "BITXOR", "BITNOT", "PRINTFREPLACER", 
                  "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


