# Generated from Grammar.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,70,482,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,1,0,1,
        0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,
        7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,
        14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,
        16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,
        19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,
        23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,
        27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,
        30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,
        32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,
        35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,
        39,1,39,1,40,1,40,1,40,5,40,311,8,40,10,40,12,40,314,9,40,3,40,316,
        8,40,1,41,4,41,319,8,41,11,41,12,41,320,1,41,1,41,5,41,325,8,41,
        10,41,12,41,328,9,41,1,41,1,41,4,41,332,8,41,11,41,12,41,333,3,41,
        336,8,41,1,42,1,42,5,42,340,8,42,10,42,12,42,343,9,42,1,43,1,43,
        1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,357,8,44,
        1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,
        1,50,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,
        1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,59,
        1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,
        1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,
        1,65,1,65,1,65,1,65,1,65,3,65,429,8,65,1,66,1,66,1,66,1,66,1,66,
        1,66,1,66,1,66,1,66,3,66,440,8,66,1,66,5,66,443,8,66,10,66,12,66,
        446,9,66,1,66,1,66,1,67,1,67,1,68,4,68,453,8,68,11,68,12,68,454,
        1,68,1,68,1,69,1,69,1,69,1,69,5,69,463,8,69,10,69,12,69,466,9,69,
        1,69,3,69,469,8,69,1,70,1,70,1,70,1,70,5,70,475,8,70,10,70,12,70,
        478,9,70,1,70,1,70,1,70,2,464,476,0,71,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
        18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
        29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,
        40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,0,137,68,139,
        69,141,70,1,0,10,1,0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,0,
        48,57,65,90,95,95,97,122,1,0,0,255,8,0,34,34,48,48,92,92,98,98,102,
        102,110,110,114,114,116,116,2,0,34,34,92,92,3,0,48,57,65,70,97,102,
        3,0,9,10,13,13,32,32,1,1,10,10,500,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
        0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
        0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
        0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,
        0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
        0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,
        0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
        0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
        0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
        0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
        133,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,1,143,1,0,
        0,0,3,148,1,0,0,0,5,150,1,0,0,0,7,152,1,0,0,0,9,154,1,0,0,0,11,156,
        1,0,0,0,13,158,1,0,0,0,15,160,1,0,0,0,17,167,1,0,0,0,19,169,1,0,
        0,0,21,171,1,0,0,0,23,173,1,0,0,0,25,181,1,0,0,0,27,184,1,0,0,0,
        29,187,1,0,0,0,31,191,1,0,0,0,33,197,1,0,0,0,35,202,1,0,0,0,37,207,
        1,0,0,0,39,213,1,0,0,0,41,216,1,0,0,0,43,219,1,0,0,0,45,222,1,0,
        0,0,47,225,1,0,0,0,49,228,1,0,0,0,51,232,1,0,0,0,53,236,1,0,0,0,
        55,239,1,0,0,0,57,242,1,0,0,0,59,245,1,0,0,0,61,252,1,0,0,0,63,257,
        1,0,0,0,65,265,1,0,0,0,67,268,1,0,0,0,69,273,1,0,0,0,71,279,1,0,
        0,0,73,286,1,0,0,0,75,295,1,0,0,0,77,301,1,0,0,0,79,305,1,0,0,0,
        81,315,1,0,0,0,83,335,1,0,0,0,85,337,1,0,0,0,87,344,1,0,0,0,89,348,
        1,0,0,0,91,360,1,0,0,0,93,362,1,0,0,0,95,364,1,0,0,0,97,366,1,0,
        0,0,99,368,1,0,0,0,101,370,1,0,0,0,103,372,1,0,0,0,105,374,1,0,0,
        0,107,377,1,0,0,0,109,380,1,0,0,0,111,383,1,0,0,0,113,386,1,0,0,
        0,115,389,1,0,0,0,117,392,1,0,0,0,119,394,1,0,0,0,121,397,1,0,0,
        0,123,400,1,0,0,0,125,402,1,0,0,0,127,404,1,0,0,0,129,406,1,0,0,
        0,131,428,1,0,0,0,133,430,1,0,0,0,135,449,1,0,0,0,137,452,1,0,0,
        0,139,458,1,0,0,0,141,470,1,0,0,0,143,144,5,101,0,0,144,145,5,110,
        0,0,145,146,5,117,0,0,146,147,5,109,0,0,147,2,1,0,0,0,148,149,5,
        123,0,0,149,4,1,0,0,0,150,151,5,125,0,0,151,6,1,0,0,0,152,153,5,
        44,0,0,153,8,1,0,0,0,154,155,5,61,0,0,155,10,1,0,0,0,156,157,5,40,
        0,0,157,12,1,0,0,0,158,159,5,41,0,0,159,14,1,0,0,0,160,161,5,112,
        0,0,161,162,5,114,0,0,162,163,5,105,0,0,163,164,5,110,0,0,164,165,
        5,116,0,0,165,166,5,102,0,0,166,16,1,0,0,0,167,168,5,91,0,0,168,
        18,1,0,0,0,169,170,5,93,0,0,170,20,1,0,0,0,171,172,5,58,0,0,172,
        22,1,0,0,0,173,174,5,116,0,0,174,175,5,121,0,0,175,176,5,112,0,0,
        176,177,5,101,0,0,177,178,5,100,0,0,178,179,5,101,0,0,179,180,5,
        102,0,0,180,24,1,0,0,0,181,182,5,43,0,0,182,183,5,43,0,0,183,26,
        1,0,0,0,184,185,5,45,0,0,185,186,5,45,0,0,186,28,1,0,0,0,187,188,
        5,105,0,0,188,189,5,110,0,0,189,190,5,116,0,0,190,30,1,0,0,0,191,
        192,5,102,0,0,192,193,5,108,0,0,193,194,5,111,0,0,194,195,5,97,0,
        0,195,196,5,116,0,0,196,32,1,0,0,0,197,198,5,99,0,0,198,199,5,104,
        0,0,199,200,5,97,0,0,200,201,5,114,0,0,201,34,1,0,0,0,202,203,5,
        118,0,0,203,204,5,111,0,0,204,205,5,105,0,0,205,206,5,100,0,0,206,
        36,1,0,0,0,207,208,5,99,0,0,208,209,5,111,0,0,209,210,5,110,0,0,
        210,211,5,115,0,0,211,212,5,116,0,0,212,38,1,0,0,0,213,214,5,43,
        0,0,214,215,5,61,0,0,215,40,1,0,0,0,216,217,5,45,0,0,217,218,5,61,
        0,0,218,42,1,0,0,0,219,220,5,42,0,0,220,221,5,61,0,0,221,44,1,0,
        0,0,222,223,5,47,0,0,223,224,5,61,0,0,224,46,1,0,0,0,225,226,5,37,
        0,0,226,227,5,61,0,0,227,48,1,0,0,0,228,229,5,60,0,0,229,230,5,60,
        0,0,230,231,5,61,0,0,231,50,1,0,0,0,232,233,5,62,0,0,233,234,5,62,
        0,0,234,235,5,61,0,0,235,52,1,0,0,0,236,237,5,38,0,0,237,238,5,61,
        0,0,238,54,1,0,0,0,239,240,5,94,0,0,240,241,5,61,0,0,241,56,1,0,
        0,0,242,243,5,124,0,0,243,244,5,61,0,0,244,58,1,0,0,0,245,246,5,
        115,0,0,246,247,5,119,0,0,247,248,5,105,0,0,248,249,5,116,0,0,249,
        250,5,99,0,0,250,251,5,104,0,0,251,60,1,0,0,0,252,253,5,99,0,0,253,
        254,5,97,0,0,254,255,5,115,0,0,255,256,5,101,0,0,256,62,1,0,0,0,
        257,258,5,100,0,0,258,259,5,101,0,0,259,260,5,102,0,0,260,261,5,
        97,0,0,261,262,5,117,0,0,262,263,5,108,0,0,263,264,5,116,0,0,264,
        64,1,0,0,0,265,266,5,105,0,0,266,267,5,102,0,0,267,66,1,0,0,0,268,
        269,5,101,0,0,269,270,5,108,0,0,270,271,5,115,0,0,271,272,5,101,
        0,0,272,68,1,0,0,0,273,274,5,98,0,0,274,275,5,114,0,0,275,276,5,
        101,0,0,276,277,5,97,0,0,277,278,5,107,0,0,278,70,1,0,0,0,279,280,
        5,114,0,0,280,281,5,101,0,0,281,282,5,116,0,0,282,283,5,117,0,0,
        283,284,5,114,0,0,284,285,5,110,0,0,285,72,1,0,0,0,286,287,5,99,
        0,0,287,288,5,111,0,0,288,289,5,110,0,0,289,290,5,116,0,0,290,291,
        5,105,0,0,291,292,5,110,0,0,292,293,5,117,0,0,293,294,5,101,0,0,
        294,74,1,0,0,0,295,296,5,119,0,0,296,297,5,104,0,0,297,298,5,105,
        0,0,298,299,5,108,0,0,299,300,5,101,0,0,300,76,1,0,0,0,301,302,5,
        102,0,0,302,303,5,111,0,0,303,304,5,114,0,0,304,78,1,0,0,0,305,306,
        5,59,0,0,306,80,1,0,0,0,307,316,5,48,0,0,308,312,7,0,0,0,309,311,
        7,1,0,0,310,309,1,0,0,0,311,314,1,0,0,0,312,310,1,0,0,0,312,313,
        1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,0,315,307,1,0,0,0,315,308,
        1,0,0,0,316,82,1,0,0,0,317,319,7,1,0,0,318,317,1,0,0,0,319,320,1,
        0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,321,322,1,0,0,0,322,326,5,
        46,0,0,323,325,7,1,0,0,324,323,1,0,0,0,325,328,1,0,0,0,326,324,1,
        0,0,0,326,327,1,0,0,0,327,336,1,0,0,0,328,326,1,0,0,0,329,331,5,
        46,0,0,330,332,7,1,0,0,331,330,1,0,0,0,332,333,1,0,0,0,333,331,1,
        0,0,0,333,334,1,0,0,0,334,336,1,0,0,0,335,318,1,0,0,0,335,329,1,
        0,0,0,336,84,1,0,0,0,337,341,7,2,0,0,338,340,7,3,0,0,339,338,1,0,
        0,0,340,343,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,86,1,0,0,
        0,343,341,1,0,0,0,344,345,5,39,0,0,345,346,7,4,0,0,346,347,5,39,
        0,0,347,88,1,0,0,0,348,356,5,39,0,0,349,350,5,92,0,0,350,357,5,110,
        0,0,351,352,5,92,0,0,352,357,5,116,0,0,353,354,5,92,0,0,354,357,
        5,48,0,0,355,357,9,0,0,0,356,349,1,0,0,0,356,351,1,0,0,0,356,353,
        1,0,0,0,356,355,1,0,0,0,357,358,1,0,0,0,358,359,5,39,0,0,359,90,
        1,0,0,0,360,361,5,43,0,0,361,92,1,0,0,0,362,363,5,45,0,0,363,94,
        1,0,0,0,364,365,5,42,0,0,365,96,1,0,0,0,366,367,5,47,0,0,367,98,
        1,0,0,0,368,369,5,37,0,0,369,100,1,0,0,0,370,371,5,62,0,0,371,102,
        1,0,0,0,372,373,5,60,0,0,373,104,1,0,0,0,374,375,5,61,0,0,375,376,
        5,61,0,0,376,106,1,0,0,0,377,378,5,62,0,0,378,379,5,61,0,0,379,108,
        1,0,0,0,380,381,5,60,0,0,381,382,5,61,0,0,382,110,1,0,0,0,383,384,
        5,33,0,0,384,385,5,61,0,0,385,112,1,0,0,0,386,387,5,38,0,0,387,388,
        5,38,0,0,388,114,1,0,0,0,389,390,5,124,0,0,390,391,5,124,0,0,391,
        116,1,0,0,0,392,393,5,33,0,0,393,118,1,0,0,0,394,395,5,60,0,0,395,
        396,5,60,0,0,396,120,1,0,0,0,397,398,5,62,0,0,398,399,5,62,0,0,399,
        122,1,0,0,0,400,401,5,38,0,0,401,124,1,0,0,0,402,403,5,124,0,0,403,
        126,1,0,0,0,404,405,5,94,0,0,405,128,1,0,0,0,406,407,5,126,0,0,407,
        130,1,0,0,0,408,409,5,34,0,0,409,410,5,37,0,0,410,411,5,115,0,0,
        411,429,5,34,0,0,412,413,5,34,0,0,413,414,5,37,0,0,414,415,5,100,
        0,0,415,429,5,34,0,0,416,417,5,34,0,0,417,418,5,37,0,0,418,419,5,
        120,0,0,419,429,5,34,0,0,420,421,5,34,0,0,421,422,5,37,0,0,422,423,
        5,102,0,0,423,429,5,34,0,0,424,425,5,34,0,0,425,426,5,37,0,0,426,
        427,5,99,0,0,427,429,5,34,0,0,428,408,1,0,0,0,428,412,1,0,0,0,428,
        416,1,0,0,0,428,420,1,0,0,0,428,424,1,0,0,0,429,132,1,0,0,0,430,
        444,5,34,0,0,431,439,5,92,0,0,432,440,7,5,0,0,433,434,5,117,0,0,
        434,435,3,135,67,0,435,436,3,135,67,0,436,437,3,135,67,0,437,438,
        3,135,67,0,438,440,1,0,0,0,439,432,1,0,0,0,439,433,1,0,0,0,440,443,
        1,0,0,0,441,443,8,6,0,0,442,431,1,0,0,0,442,441,1,0,0,0,443,446,
        1,0,0,0,444,442,1,0,0,0,444,445,1,0,0,0,445,447,1,0,0,0,446,444,
        1,0,0,0,447,448,5,34,0,0,448,134,1,0,0,0,449,450,7,7,0,0,450,136,
        1,0,0,0,451,453,7,8,0,0,452,451,1,0,0,0,453,454,1,0,0,0,454,452,
        1,0,0,0,454,455,1,0,0,0,455,456,1,0,0,0,456,457,6,68,0,0,457,138,
        1,0,0,0,458,459,5,47,0,0,459,460,5,47,0,0,460,464,1,0,0,0,461,463,
        9,0,0,0,462,461,1,0,0,0,463,466,1,0,0,0,464,465,1,0,0,0,464,462,
        1,0,0,0,465,468,1,0,0,0,466,464,1,0,0,0,467,469,7,9,0,0,468,467,
        1,0,0,0,469,140,1,0,0,0,470,471,5,47,0,0,471,472,5,42,0,0,472,476,
        1,0,0,0,473,475,9,0,0,0,474,473,1,0,0,0,475,478,1,0,0,0,476,477,
        1,0,0,0,476,474,1,0,0,0,477,479,1,0,0,0,478,476,1,0,0,0,479,480,
        5,42,0,0,480,481,5,47,0,0,481,142,1,0,0,0,17,0,312,315,320,326,333,
        335,341,356,428,439,442,444,454,464,468,476,1,6,0,0
    ]

class GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    SWITCH = 30
    CASE = 31
    DEFAULT = 32
    IF = 33
    ELSE = 34
    BREAK = 35
    RETURN = 36
    CONTINUE = 37
    WHILE = 38
    FOR = 39
    TERMINAL = 40
    NUMBER = 41
    FLOAT = 42
    ID = 43
    CHAR = 44
    CHAR_ESC = 45
    PLUS = 46
    MINUS = 47
    MUL = 48
    DIV = 49
    MOD = 50
    GT = 51
    LT = 52
    EQ = 53
    GE = 54
    LE = 55
    NE = 56
    AND = 57
    OR = 58
    NOT = 59
    LSHIFT = 60
    RSHIFT = 61
    BITAND = 62
    BITOR = 63
    BITXOR = 64
    BITNOT = 65
    PRINTFREPLACER = 66
    STRING_LITERAL = 67
    WS = 68
    SINGLE_LINE_COMMENT = 69
    MULTI_LINE_COMMENT = 70

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'enum'", "'{'", "'}'", "','", "'='", "'('", "')'", "'printf'", 
            "'['", "']'", "':'", "'typedef'", "'++'", "'--'", "'int'", "'float'", 
            "'char'", "'void'", "'const'", "'+='", "'-='", "'*='", "'/='", 
            "'%='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'switch'", 
            "'case'", "'default'", "'if'", "'else'", "'break'", "'return'", 
            "'continue'", "'while'", "'for'", "';'", "'+'", "'-'", "'*'", 
            "'/'", "'%'", "'>'", "'<'", "'=='", "'>='", "'<='", "'!='", 
            "'&&'", "'||'", "'!'", "'<<'", "'>>'", "'&'", "'|'", "'^'", 
            "'~'" ]

    symbolicNames = [ "<INVALID>",
            "SWITCH", "CASE", "DEFAULT", "IF", "ELSE", "BREAK", "RETURN", 
            "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", "FLOAT", "ID", 
            "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", 
            "LT", "EQ", "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", 
            "RSHIFT", "BITAND", "BITOR", "BITXOR", "BITNOT", "PRINTFREPLACER", 
            "STRING_LITERAL", "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "SWITCH", "CASE", "DEFAULT", 
                  "IF", "ELSE", "BREAK", "RETURN", "CONTINUE", "WHILE", 
                  "FOR", "TERMINAL", "NUMBER", "FLOAT", "ID", "CHAR", "CHAR_ESC", 
                  "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", "LT", "EQ", 
                  "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", "RSHIFT", 
                  "BITAND", "BITOR", "BITXOR", "BITNOT", "PRINTFREPLACER", 
                  "STRING_LITERAL", "HexDigit", "WS", "SINGLE_LINE_COMMENT", 
                  "MULTI_LINE_COMMENT" ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


