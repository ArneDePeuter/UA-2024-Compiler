# Generated from Grammar.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,73,529,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,
        1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,
        17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
        20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,
        22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,
        27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,
        30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,
        33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
        35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,
        38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,
        40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,
        42,1,42,1,43,1,43,1,44,1,44,1,44,5,44,341,8,44,10,44,12,44,344,9,
        44,3,44,346,8,44,1,45,4,45,349,8,45,11,45,12,45,350,1,45,1,45,5,
        45,355,8,45,10,45,12,45,358,9,45,1,45,1,45,4,45,362,8,45,11,45,12,
        45,363,3,45,366,8,45,1,46,1,46,5,46,370,8,46,10,46,12,46,373,9,46,
        1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,
        387,8,48,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,
        1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,
        1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,63,
        1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,
        1,69,1,69,1,69,1,69,5,69,443,8,69,10,69,12,69,446,9,69,1,69,1,69,
        1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,
        3,70,463,8,70,1,71,1,71,5,71,467,8,71,10,71,12,71,470,9,71,1,71,
        5,71,473,8,71,10,71,12,71,476,9,71,1,71,1,71,4,71,480,8,71,11,71,
        12,71,481,3,71,484,8,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,3,72,
        493,8,72,3,72,495,8,72,1,73,1,73,1,74,4,74,500,8,74,11,74,12,74,
        501,1,74,1,74,1,75,1,75,1,75,1,75,5,75,510,8,75,10,75,12,75,513,
        9,75,1,75,3,75,516,8,75,1,76,1,76,1,76,1,76,5,76,522,8,76,10,76,
        12,76,525,9,76,1,76,1,76,1,76,2,511,523,0,77,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
        50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
        119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
        69,139,70,141,0,143,0,145,0,147,0,149,71,151,72,153,73,1,0,14,1,
        0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,1,0,0,255,3,0,34,34,37,37,92,92,7,0,34,34,92,92,98,98,102,102,
        110,110,114,114,116,116,2,0,35,35,43,48,11,0,37,37,65,65,69,71,88,
        88,97,97,99,103,105,105,110,112,115,115,117,117,120,120,1,0,48,51,
        1,0,48,55,3,0,48,57,65,70,97,102,3,0,9,10,13,13,32,32,1,1,10,10,
        549,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
        0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
        0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
        0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
        0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
        0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
        0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
        0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,
        119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
        0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,
        1,0,0,0,0,139,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,
        1,155,1,0,0,0,3,162,1,0,0,0,5,164,1,0,0,0,7,166,1,0,0,0,9,171,1,
        0,0,0,11,173,1,0,0,0,13,175,1,0,0,0,15,177,1,0,0,0,17,179,1,0,0,
        0,19,186,1,0,0,0,21,192,1,0,0,0,23,194,1,0,0,0,25,196,1,0,0,0,27,
        198,1,0,0,0,29,206,1,0,0,0,31,208,1,0,0,0,33,211,1,0,0,0,35,214,
        1,0,0,0,37,217,1,0,0,0,39,221,1,0,0,0,41,227,1,0,0,0,43,232,1,0,
        0,0,45,237,1,0,0,0,47,243,1,0,0,0,49,246,1,0,0,0,51,249,1,0,0,0,
        53,252,1,0,0,0,55,255,1,0,0,0,57,258,1,0,0,0,59,262,1,0,0,0,61,266,
        1,0,0,0,63,269,1,0,0,0,65,272,1,0,0,0,67,275,1,0,0,0,69,282,1,0,
        0,0,71,287,1,0,0,0,73,295,1,0,0,0,75,298,1,0,0,0,77,303,1,0,0,0,
        79,309,1,0,0,0,81,316,1,0,0,0,83,325,1,0,0,0,85,331,1,0,0,0,87,335,
        1,0,0,0,89,345,1,0,0,0,91,365,1,0,0,0,93,367,1,0,0,0,95,374,1,0,
        0,0,97,378,1,0,0,0,99,390,1,0,0,0,101,392,1,0,0,0,103,394,1,0,0,
        0,105,396,1,0,0,0,107,398,1,0,0,0,109,400,1,0,0,0,111,402,1,0,0,
        0,113,404,1,0,0,0,115,407,1,0,0,0,117,410,1,0,0,0,119,413,1,0,0,
        0,121,416,1,0,0,0,123,419,1,0,0,0,125,422,1,0,0,0,127,424,1,0,0,
        0,129,427,1,0,0,0,131,430,1,0,0,0,133,432,1,0,0,0,135,434,1,0,0,
        0,137,436,1,0,0,0,139,438,1,0,0,0,141,449,1,0,0,0,143,464,1,0,0,
        0,145,494,1,0,0,0,147,496,1,0,0,0,149,499,1,0,0,0,151,505,1,0,0,
        0,153,517,1,0,0,0,155,156,5,115,0,0,156,157,5,116,0,0,157,158,5,
        114,0,0,158,159,5,117,0,0,159,160,5,99,0,0,160,161,5,116,0,0,161,
        2,1,0,0,0,162,163,5,123,0,0,163,4,1,0,0,0,164,165,5,125,0,0,165,
        6,1,0,0,0,166,167,5,101,0,0,167,168,5,110,0,0,168,169,5,117,0,0,
        169,170,5,109,0,0,170,8,1,0,0,0,171,172,5,44,0,0,172,10,1,0,0,0,
        173,174,5,61,0,0,174,12,1,0,0,0,175,176,5,40,0,0,176,14,1,0,0,0,
        177,178,5,41,0,0,178,16,1,0,0,0,179,180,5,112,0,0,180,181,5,114,
        0,0,181,182,5,105,0,0,182,183,5,110,0,0,183,184,5,116,0,0,184,185,
        5,102,0,0,185,18,1,0,0,0,186,187,5,115,0,0,187,188,5,99,0,0,188,
        189,5,97,0,0,189,190,5,110,0,0,190,191,5,102,0,0,191,20,1,0,0,0,
        192,193,5,91,0,0,193,22,1,0,0,0,194,195,5,93,0,0,195,24,1,0,0,0,
        196,197,5,58,0,0,197,26,1,0,0,0,198,199,5,116,0,0,199,200,5,121,
        0,0,200,201,5,112,0,0,201,202,5,101,0,0,202,203,5,100,0,0,203,204,
        5,101,0,0,204,205,5,102,0,0,205,28,1,0,0,0,206,207,5,46,0,0,207,
        30,1,0,0,0,208,209,5,45,0,0,209,210,5,62,0,0,210,32,1,0,0,0,211,
        212,5,43,0,0,212,213,5,43,0,0,213,34,1,0,0,0,214,215,5,45,0,0,215,
        216,5,45,0,0,216,36,1,0,0,0,217,218,5,105,0,0,218,219,5,110,0,0,
        219,220,5,116,0,0,220,38,1,0,0,0,221,222,5,102,0,0,222,223,5,108,
        0,0,223,224,5,111,0,0,224,225,5,97,0,0,225,226,5,116,0,0,226,40,
        1,0,0,0,227,228,5,99,0,0,228,229,5,104,0,0,229,230,5,97,0,0,230,
        231,5,114,0,0,231,42,1,0,0,0,232,233,5,118,0,0,233,234,5,111,0,0,
        234,235,5,105,0,0,235,236,5,100,0,0,236,44,1,0,0,0,237,238,5,99,
        0,0,238,239,5,111,0,0,239,240,5,110,0,0,240,241,5,115,0,0,241,242,
        5,116,0,0,242,46,1,0,0,0,243,244,5,43,0,0,244,245,5,61,0,0,245,48,
        1,0,0,0,246,247,5,45,0,0,247,248,5,61,0,0,248,50,1,0,0,0,249,250,
        5,42,0,0,250,251,5,61,0,0,251,52,1,0,0,0,252,253,5,47,0,0,253,254,
        5,61,0,0,254,54,1,0,0,0,255,256,5,37,0,0,256,257,5,61,0,0,257,56,
        1,0,0,0,258,259,5,60,0,0,259,260,5,60,0,0,260,261,5,61,0,0,261,58,
        1,0,0,0,262,263,5,62,0,0,263,264,5,62,0,0,264,265,5,61,0,0,265,60,
        1,0,0,0,266,267,5,38,0,0,267,268,5,61,0,0,268,62,1,0,0,0,269,270,
        5,94,0,0,270,271,5,61,0,0,271,64,1,0,0,0,272,273,5,124,0,0,273,274,
        5,61,0,0,274,66,1,0,0,0,275,276,5,115,0,0,276,277,5,119,0,0,277,
        278,5,105,0,0,278,279,5,116,0,0,279,280,5,99,0,0,280,281,5,104,0,
        0,281,68,1,0,0,0,282,283,5,99,0,0,283,284,5,97,0,0,284,285,5,115,
        0,0,285,286,5,101,0,0,286,70,1,0,0,0,287,288,5,100,0,0,288,289,5,
        101,0,0,289,290,5,102,0,0,290,291,5,97,0,0,291,292,5,117,0,0,292,
        293,5,108,0,0,293,294,5,116,0,0,294,72,1,0,0,0,295,296,5,105,0,0,
        296,297,5,102,0,0,297,74,1,0,0,0,298,299,5,101,0,0,299,300,5,108,
        0,0,300,301,5,115,0,0,301,302,5,101,0,0,302,76,1,0,0,0,303,304,5,
        98,0,0,304,305,5,114,0,0,305,306,5,101,0,0,306,307,5,97,0,0,307,
        308,5,107,0,0,308,78,1,0,0,0,309,310,5,114,0,0,310,311,5,101,0,0,
        311,312,5,116,0,0,312,313,5,117,0,0,313,314,5,114,0,0,314,315,5,
        110,0,0,315,80,1,0,0,0,316,317,5,99,0,0,317,318,5,111,0,0,318,319,
        5,110,0,0,319,320,5,116,0,0,320,321,5,105,0,0,321,322,5,110,0,0,
        322,323,5,117,0,0,323,324,5,101,0,0,324,82,1,0,0,0,325,326,5,119,
        0,0,326,327,5,104,0,0,327,328,5,105,0,0,328,329,5,108,0,0,329,330,
        5,101,0,0,330,84,1,0,0,0,331,332,5,102,0,0,332,333,5,111,0,0,333,
        334,5,114,0,0,334,86,1,0,0,0,335,336,5,59,0,0,336,88,1,0,0,0,337,
        346,5,48,0,0,338,342,7,0,0,0,339,341,7,1,0,0,340,339,1,0,0,0,341,
        344,1,0,0,0,342,340,1,0,0,0,342,343,1,0,0,0,343,346,1,0,0,0,344,
        342,1,0,0,0,345,337,1,0,0,0,345,338,1,0,0,0,346,90,1,0,0,0,347,349,
        7,1,0,0,348,347,1,0,0,0,349,350,1,0,0,0,350,348,1,0,0,0,350,351,
        1,0,0,0,351,352,1,0,0,0,352,356,5,46,0,0,353,355,7,1,0,0,354,353,
        1,0,0,0,355,358,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,366,
        1,0,0,0,358,356,1,0,0,0,359,361,5,46,0,0,360,362,7,1,0,0,361,360,
        1,0,0,0,362,363,1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,0,364,366,
        1,0,0,0,365,348,1,0,0,0,365,359,1,0,0,0,366,92,1,0,0,0,367,371,7,
        2,0,0,368,370,7,3,0,0,369,368,1,0,0,0,370,373,1,0,0,0,371,369,1,
        0,0,0,371,372,1,0,0,0,372,94,1,0,0,0,373,371,1,0,0,0,374,375,5,39,
        0,0,375,376,7,4,0,0,376,377,5,39,0,0,377,96,1,0,0,0,378,386,5,39,
        0,0,379,380,5,92,0,0,380,387,5,110,0,0,381,382,5,92,0,0,382,387,
        5,116,0,0,383,384,5,92,0,0,384,387,5,48,0,0,385,387,9,0,0,0,386,
        379,1,0,0,0,386,381,1,0,0,0,386,383,1,0,0,0,386,385,1,0,0,0,387,
        388,1,0,0,0,388,389,5,39,0,0,389,98,1,0,0,0,390,391,5,43,0,0,391,
        100,1,0,0,0,392,393,5,45,0,0,393,102,1,0,0,0,394,395,5,42,0,0,395,
        104,1,0,0,0,396,397,5,47,0,0,397,106,1,0,0,0,398,399,5,37,0,0,399,
        108,1,0,0,0,400,401,5,62,0,0,401,110,1,0,0,0,402,403,5,60,0,0,403,
        112,1,0,0,0,404,405,5,61,0,0,405,406,5,61,0,0,406,114,1,0,0,0,407,
        408,5,62,0,0,408,409,5,61,0,0,409,116,1,0,0,0,410,411,5,60,0,0,411,
        412,5,61,0,0,412,118,1,0,0,0,413,414,5,33,0,0,414,415,5,61,0,0,415,
        120,1,0,0,0,416,417,5,38,0,0,417,418,5,38,0,0,418,122,1,0,0,0,419,
        420,5,124,0,0,420,421,5,124,0,0,421,124,1,0,0,0,422,423,5,33,0,0,
        423,126,1,0,0,0,424,425,5,60,0,0,425,426,5,60,0,0,426,128,1,0,0,
        0,427,428,5,62,0,0,428,429,5,62,0,0,429,130,1,0,0,0,430,431,5,38,
        0,0,431,132,1,0,0,0,432,433,5,124,0,0,433,134,1,0,0,0,434,435,5,
        94,0,0,435,136,1,0,0,0,436,437,5,126,0,0,437,138,1,0,0,0,438,444,
        5,34,0,0,439,443,3,141,70,0,440,443,3,143,71,0,441,443,8,5,0,0,442,
        439,1,0,0,0,442,440,1,0,0,0,442,441,1,0,0,0,443,446,1,0,0,0,444,
        442,1,0,0,0,444,445,1,0,0,0,445,447,1,0,0,0,446,444,1,0,0,0,447,
        448,5,34,0,0,448,140,1,0,0,0,449,462,5,92,0,0,450,463,7,6,0,0,451,
        452,5,117,0,0,452,453,3,147,73,0,453,454,3,147,73,0,454,455,3,147,
        73,0,455,456,3,147,73,0,456,463,1,0,0,0,457,458,5,120,0,0,458,459,
        3,147,73,0,459,460,3,147,73,0,460,463,1,0,0,0,461,463,3,145,72,0,
        462,450,1,0,0,0,462,451,1,0,0,0,462,457,1,0,0,0,462,461,1,0,0,0,
        463,142,1,0,0,0,464,468,5,37,0,0,465,467,7,7,0,0,466,465,1,0,0,0,
        467,470,1,0,0,0,468,466,1,0,0,0,468,469,1,0,0,0,469,474,1,0,0,0,
        470,468,1,0,0,0,471,473,7,1,0,0,472,471,1,0,0,0,473,476,1,0,0,0,
        474,472,1,0,0,0,474,475,1,0,0,0,475,483,1,0,0,0,476,474,1,0,0,0,
        477,479,5,46,0,0,478,480,7,1,0,0,479,478,1,0,0,0,480,481,1,0,0,0,
        481,479,1,0,0,0,481,482,1,0,0,0,482,484,1,0,0,0,483,477,1,0,0,0,
        483,484,1,0,0,0,484,485,1,0,0,0,485,486,7,8,0,0,486,144,1,0,0,0,
        487,488,7,9,0,0,488,489,7,10,0,0,489,495,7,10,0,0,490,492,7,10,0,
        0,491,493,7,10,0,0,492,491,1,0,0,0,492,493,1,0,0,0,493,495,1,0,0,
        0,494,487,1,0,0,0,494,490,1,0,0,0,495,146,1,0,0,0,496,497,7,11,0,
        0,497,148,1,0,0,0,498,500,7,12,0,0,499,498,1,0,0,0,500,501,1,0,0,
        0,501,499,1,0,0,0,501,502,1,0,0,0,502,503,1,0,0,0,503,504,6,74,0,
        0,504,150,1,0,0,0,505,506,5,47,0,0,506,507,5,47,0,0,507,511,1,0,
        0,0,508,510,9,0,0,0,509,508,1,0,0,0,510,513,1,0,0,0,511,512,1,0,
        0,0,511,509,1,0,0,0,512,515,1,0,0,0,513,511,1,0,0,0,514,516,7,13,
        0,0,515,514,1,0,0,0,516,152,1,0,0,0,517,518,5,47,0,0,518,519,5,42,
        0,0,519,523,1,0,0,0,520,522,9,0,0,0,521,520,1,0,0,0,522,525,1,0,
        0,0,523,524,1,0,0,0,523,521,1,0,0,0,524,526,1,0,0,0,525,523,1,0,
        0,0,526,527,5,42,0,0,527,528,5,47,0,0,528,154,1,0,0,0,22,0,342,345,
        350,356,363,365,371,386,442,444,462,468,474,481,483,492,494,501,
        511,515,523,1,6,0,0
    ]

class GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    SWITCH = 34
    CASE = 35
    DEFAULT = 36
    IF = 37
    ELSE = 38
    BREAK = 39
    RETURN = 40
    CONTINUE = 41
    WHILE = 42
    FOR = 43
    TERMINAL = 44
    NUMBER = 45
    FLOAT = 46
    ID = 47
    CHAR = 48
    CHAR_ESC = 49
    PLUS = 50
    MINUS = 51
    MUL = 52
    DIV = 53
    MOD = 54
    GT = 55
    LT = 56
    EQ = 57
    GE = 58
    LE = 59
    NE = 60
    AND = 61
    OR = 62
    NOT = 63
    LSHIFT = 64
    RSHIFT = 65
    BITAND = 66
    BITOR = 67
    BITXOR = 68
    BITNOT = 69
    STRING_LITERAL = 70
    WS = 71
    SINGLE_LINE_COMMENT = 72
    MULTI_LINE_COMMENT = 73

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'struct'", "'{'", "'}'", "'enum'", "','", "'='", "'('", "')'", 
            "'printf'", "'scanf'", "'['", "']'", "':'", "'typedef'", "'.'", 
            "'->'", "'++'", "'--'", "'int'", "'float'", "'char'", "'void'", 
            "'const'", "'+='", "'-='", "'*='", "'/='", "'%='", "'<<='", 
            "'>>='", "'&='", "'^='", "'|='", "'switch'", "'case'", "'default'", 
            "'if'", "'else'", "'break'", "'return'", "'continue'", "'while'", 
            "'for'", "';'", "'+'", "'-'", "'*'", "'/'", "'%'", "'>'", "'<'", 
            "'=='", "'>='", "'<='", "'!='", "'&&'", "'||'", "'!'", "'<<'", 
            "'>>'", "'&'", "'|'", "'^'", "'~'" ]

    symbolicNames = [ "<INVALID>",
            "SWITCH", "CASE", "DEFAULT", "IF", "ELSE", "BREAK", "RETURN", 
            "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", "FLOAT", "ID", 
            "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", "DIV", "MOD", "GT", 
            "LT", "EQ", "GE", "LE", "NE", "AND", "OR", "NOT", "LSHIFT", 
            "RSHIFT", "BITAND", "BITOR", "BITXOR", "BITNOT", "STRING_LITERAL", 
            "WS", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "SWITCH", "CASE", "DEFAULT", "IF", "ELSE", "BREAK", 
                  "RETURN", "CONTINUE", "WHILE", "FOR", "TERMINAL", "NUMBER", 
                  "FLOAT", "ID", "CHAR", "CHAR_ESC", "PLUS", "MINUS", "MUL", 
                  "DIV", "MOD", "GT", "LT", "EQ", "GE", "LE", "NE", "AND", 
                  "OR", "NOT", "LSHIFT", "RSHIFT", "BITAND", "BITOR", "BITXOR", 
                  "BITNOT", "STRING_LITERAL", "EscapeSequence", "FormatSpecifier", 
                  "OctalEscape", "HexDigit", "WS", "SINGLE_LINE_COMMENT", 
                  "MULTI_LINE_COMMENT" ]

    grammarFileName = "Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


